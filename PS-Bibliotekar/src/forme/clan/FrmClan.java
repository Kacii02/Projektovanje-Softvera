/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme.clan;

import communication.Communication;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Clan;

/**
 *
 * @author kacan
 */
public class FrmClan extends javax.swing.JFrame {

    Communication communication;
    public List<Clan> sviClanovi;

    /**
     * Creates new form FrmClan
     */
    public FrmClan() {
        communication = Communication.getInstance();
        initComponents();
        setTitle("Rad sa clanovima");
        dobaviSveClanove();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnFiltriraj = new javax.swing.JButton();
        btnResetujFilter = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnDodajClana = new javax.swing.JButton();
        btnIzmeniClana = new javax.swing.JButton();
        btnObrisiClana = new javax.swing.JButton();
        btnKrajRada = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClanovi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Filtriraj po mejlu:");

        btnFiltriraj.setText("Filtriraj");
        btnFiltriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrirajActionPerformed(evt);
            }
        });

        btnResetujFilter.setText("Resetuj filter");
        btnResetujFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetujFilterActionPerformed(evt);
            }
        });

        btnDodajClana.setText("Dodaj novog clana");
        btnDodajClana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajClanaActionPerformed(evt);
            }
        });

        btnIzmeniClana.setText("Uredi izabranog clana");
        btnIzmeniClana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniClanaActionPerformed(evt);
            }
        });

        btnObrisiClana.setText("Obrisi izabranog clana");
        btnObrisiClana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiClanaActionPerformed(evt);
            }
        });

        btnKrajRada.setText("Kraj rada");
        btnKrajRada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKrajRadaActionPerformed(evt);
            }
        });

        tblClanovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblClanovi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFiltriraj, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnResetujFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodajClana)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIzmeniClana)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnObrisiClana)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnKrajRada, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltriraj)
                    .addComponent(btnResetujFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajClana)
                    .addComponent(btnIzmeniClana)
                    .addComponent(btnObrisiClana)
                    .addComponent(btnKrajRada))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFiltrirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrirajActionPerformed
        String emailFilter = txtEmail.getText().trim();
        Clan zaPretragu = new Clan();
        zaPretragu.setEmail(emailFilter);

        if (sviClanovi == null || sviClanovi.isEmpty()) {
            return;
        }

        List<Clan> filtriraniClanovi = communication.vratiSveClanove(zaPretragu);
        
         if(filtriraniClanovi==null){
            JOptionPane.showMessageDialog(this, "Baza ne može da učita listu", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
      

        TableModelClan model = new TableModelClan(filtriraniClanovi);
        tblClanovi.setModel(model);
    }//GEN-LAST:event_btnFiltrirajActionPerformed

    private void btnKrajRadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKrajRadaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnKrajRadaActionPerformed

    private void btnResetujFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetujFilterActionPerformed
        txtEmail.setText("");
        popuniTabeluClanovima();
    }//GEN-LAST:event_btnResetujFilterActionPerformed

    private void btnDodajClanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajClanaActionPerformed
        FrmDodajIzmeniClan frmDodajIzmeniClan = new FrmDodajIzmeniClan(this, null);
        frmDodajIzmeniClan.setVisible(true);
        frmDodajIzmeniClan.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnDodajClanaActionPerformed

    private void btnIzmeniClanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniClanaActionPerformed
        int izbor = tblClanovi.getSelectedRow();
        if (izbor == -1) {
            JOptionPane.showMessageDialog(this, "Morate izabrati clana za izmenu");
            return;
        }
        TableModelClan model = (TableModelClan) tblClanovi.getModel();
        Clan izabraniClan = model.getClan(izbor);

        FrmDodajIzmeniClan frmDodajIzmeniClan = new FrmDodajIzmeniClan(this, izabraniClan);
        frmDodajIzmeniClan.setVisible(true);
        frmDodajIzmeniClan.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnIzmeniClanaActionPerformed

    private void btnObrisiClanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiClanaActionPerformed
        int[] izabraniRedovi = tblClanovi.getSelectedRows();

        if (izabraniRedovi.length == 0) {
            JOptionPane.showMessageDialog(this, "Nema selektovanih članova za brisanje!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int izbor = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da želite da obrišete izabrane članove?", "Potvrda brisanja", JOptionPane.YES_NO_OPTION);

        if (izbor == JOptionPane.YES_OPTION) {
            for (int i = 0; i < izabraniRedovi.length; i++) {
                TableModelClan model = (TableModelClan) tblClanovi.getModel();
                Clan clanZaBrisanje = model.getClan(izabraniRedovi[i]);

                int uspeh = communication.obrisiClana(clanZaBrisanje);

                if (uspeh != 0) {
                    JOptionPane.showMessageDialog(this, "Član " + clanZaBrisanje.getIme() + " " + clanZaBrisanje.getPrezime() + " je uspešno obrisan.", "Uspešno brisanje", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Došlo je do greške pri brisanju člana " + clanZaBrisanje.getIme() + " " + clanZaBrisanje.getPrezime() + ".", "Greška", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        dobaviSveClanove();
    }//GEN-LAST:event_btnObrisiClanaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajClana;
    private javax.swing.JButton btnFiltriraj;
    private javax.swing.JButton btnIzmeniClana;
    private javax.swing.JButton btnKrajRada;
    private javax.swing.JButton btnObrisiClana;
    private javax.swing.JButton btnResetujFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblClanovi;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluClanovima() {
        if (sviClanovi != null) {
            TableModelClan model = new TableModelClan(sviClanovi);
            tblClanovi.setModel(model);
        }
    }

    public void dobaviSveClanove() {
       Clan zaDobavljanjeSvih = new Clan();
       zaDobavljanjeSvih.setEmail("");
       sviClanovi = communication.vratiSveClanove(zaDobavljanjeSvih);
       popuniTabeluClanovima();
    }
}
