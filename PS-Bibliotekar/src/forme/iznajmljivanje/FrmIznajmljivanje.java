/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme.iznajmljivanje;

import communication.Communication;
import forme.clan.TableModelClan;
import java.util.ArrayList;

import java.util.List;
import javax.swing.JOptionPane;
import model.Bibliotekar;
import model.Clan;
import model.Iznajmljivanje;
import model.Status;

/**
 *
 * @author kacan
 */
public class FrmIznajmljivanje extends javax.swing.JFrame {

    Communication communication;
    private List<Clan> sviClanovi;
    private Bibliotekar ulogovani;

    /**
     * Creates new form FrmIznajmljivanje
     */
    public FrmIznajmljivanje(Bibliotekar ulogovani) {
        communication = Communication.getInstance();
        this.ulogovani = ulogovani;
        initComponents();
        setTitle("Rad sa iznajmljivanjim");
        dobaviSveClanove();
        osveziTabeluIznajmljivanja();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblClanovi = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnFiltriraj = new javax.swing.JButton();
        btnResetujFilter = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnPrikaziIznajmljivanja = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblIznajmljivanja = new javax.swing.JTable();
        btnDodajIznajmljivanje = new javax.swing.JButton();
        btnIzmeniIznajmljivanje = new javax.swing.JButton();
        btnZatvori = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblClanovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClanovi);

        jLabel1.setText("Filtriraj po mejlu:");

        btnFiltriraj.setText("Filtriraj");
        btnFiltriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrirajActionPerformed(evt);
            }
        });

        btnResetujFilter.setText("Resetuj filter");
        btnResetujFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetujFilterActionPerformed(evt);
            }
        });

        jLabel2.setText("Odabir člana:");

        btnPrikaziIznajmljivanja.setText("Prikaži iznajmljivanja izabranog člana");
        btnPrikaziIznajmljivanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziIznajmljivanjaActionPerformed(evt);
            }
        });

        tblIznajmljivanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblIznajmljivanja);

        btnDodajIznajmljivanje.setText("Dodaj novo iznajmljivanje");
        btnDodajIznajmljivanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajIznajmljivanjeActionPerformed(evt);
            }
        });

        btnIzmeniIznajmljivanje.setText("Uredi izabrano iznajmljivanje");
        btnIzmeniIznajmljivanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniIznajmljivanjeActionPerformed(evt);
            }
        });

        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(btnPrikaziIznajmljivanja, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDodajIznajmljivanje)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnIzmeniIznajmljivanje)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 452, Short.MAX_VALUE)
                        .addComponent(btnZatvori, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail)
                        .addGap(18, 18, 18)
                        .addComponent(btnFiltriraj, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResetujFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltriraj)
                    .addComponent(btnResetujFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPrikaziIznajmljivanja, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDodajIznajmljivanje, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                            .addComponent(btnIzmeniIznajmljivanje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnZatvori)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrikaziIznajmljivanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziIznajmljivanjaActionPerformed

        int izbor = tblClanovi.getSelectedRow();
        if (izbor == -1) {
            JOptionPane.showMessageDialog(this, "Morate da selektujte člana iz tabele.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        TableModelClan modelClan = (TableModelClan) tblClanovi.getModel();
        Clan izabraniClan = modelClan.getClan(izbor);

        List<Iznajmljivanje> iznajmljivanja = communication.vratiSvaIznajmljivanja();

        if (iznajmljivanja == null || iznajmljivanja.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nema iznajmljivanja u bazi.", "Informacija", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        List<Iznajmljivanje> iznajmljivanjaClana = new ArrayList<>();
        for (Iznajmljivanje iznajmljivanje : iznajmljivanja) {

            if (iznajmljivanje.getClan().getIdClan() == izabraniClan.getIdClan()) {
                iznajmljivanjaClana.add(iznajmljivanje);
            }
        }

        if (iznajmljivanjaClana.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Izabrani član nema iznajmljivanja.", "Informacija", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        TableModelIznajmljivanje modelIznajmljivanje = new TableModelIznajmljivanje(iznajmljivanjaClana);
        tblIznajmljivanja.setModel(modelIznajmljivanje);
    }//GEN-LAST:event_btnPrikaziIznajmljivanjaActionPerformed

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void btnFiltrirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrirajActionPerformed
        String emailFilter = txtEmail.getText().trim();
        Clan zaPretragu = new Clan();
        zaPretragu.setEmail(emailFilter);

        if (sviClanovi == null || sviClanovi.isEmpty()) {
            return;
        }

        List<Clan> filtriraniClanovi = communication.vratiSveClanove(zaPretragu);
        
         if(filtriraniClanovi==null){
            JOptionPane.showMessageDialog(this, "Baza ne može da učita listu", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
      

        TableModelClan model = new TableModelClan(filtriraniClanovi);
        tblClanovi.setModel(model);
    }//GEN-LAST:event_btnFiltrirajActionPerformed

    private void btnResetujFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetujFilterActionPerformed
        txtEmail.setText("");
        popuniTabeluClanovima();
    }//GEN-LAST:event_btnResetujFilterActionPerformed

    private void btnDodajIznajmljivanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajIznajmljivanjeActionPerformed
        int izbor = tblClanovi.getSelectedRow();
        if (izbor == -1) {
            JOptionPane.showMessageDialog(this, "Morate da selektujte člana iz tabele.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        TableModelClan modelClan = (TableModelClan) tblClanovi.getModel();
        Clan izabraniClan = modelClan.getClan(izbor);

        FrmDodajIzmeniIznajmljivanje form = new FrmDodajIzmeniIznajmljivanje(this, ulogovani, izabraniClan, null);
        form.setVisible(true);
        form.setLocationRelativeTo(null);

        osveziTabeluIznajmljivanja();
    }//GEN-LAST:event_btnDodajIznajmljivanjeActionPerformed

    private void btnIzmeniIznajmljivanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniIznajmljivanjeActionPerformed
        int redClan = tblClanovi.getSelectedRow();
        if (redClan == -1) {
            JOptionPane.showMessageDialog(this, "Morate da selektujete člana iz tabele.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int redIznajmljivanje = tblIznajmljivanja.getSelectedRow();
        if (redIznajmljivanje == -1) {
            JOptionPane.showMessageDialog(this, "Morate da selektujete iznajmljivanje koje želite da izmenite.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Uzimamo selektovanog clana
        TableModelClan modelClan = (TableModelClan) tblClanovi.getModel();
        Clan izabraniClan = modelClan.getClan(redClan);

        // Uzimamo selektovano iznajmljivanje
        TableModelIznajmljivanje modelIznajmljivanje = (TableModelIznajmljivanje) tblIznajmljivanja.getModel();
        Iznajmljivanje izabranoIznajmljivanje = modelIznajmljivanje.getIznajmljivanje(redIznajmljivanje);

        if (izabranoIznajmljivanje.getStatus().equals(Status.VRACENO)) {
            JOptionPane.showMessageDialog(this, "Ne možete menjati vraćeno iznajmljivanje", "Greška", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Otvaranje forme za izmenu
        FrmDodajIzmeniIznajmljivanje form = new FrmDodajIzmeniIznajmljivanje(this, ulogovani, izabraniClan, izabranoIznajmljivanje);
        form.setVisible(true);
        form.setLocationRelativeTo(null);

        osveziTabeluIznajmljivanja();
    }//GEN-LAST:event_btnIzmeniIznajmljivanjeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajIznajmljivanje;
    private javax.swing.JButton btnFiltriraj;
    private javax.swing.JButton btnIzmeniIznajmljivanje;
    private javax.swing.JButton btnPrikaziIznajmljivanja;
    private javax.swing.JButton btnResetujFilter;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblClanovi;
    private javax.swing.JTable tblIznajmljivanja;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables

    public void dobaviSveClanove() {
        Clan zaDobavljanjeSvih = new Clan();
        zaDobavljanjeSvih.setEmail("");
        sviClanovi = communication.vratiSveClanove(zaDobavljanjeSvih);
        popuniTabeluClanovima();

    }

    private void popuniTabeluClanovima() {
        if (sviClanovi != null) {
            TableModelClan model = new TableModelClan(sviClanovi);
            tblClanovi.setModel(model);
        }
    }

    private void osveziTabeluIznajmljivanja() {
        TableModelIznajmljivanje model = new TableModelIznajmljivanje(new ArrayList<>());
        tblIznajmljivanja.setModel(model);
    }
}
