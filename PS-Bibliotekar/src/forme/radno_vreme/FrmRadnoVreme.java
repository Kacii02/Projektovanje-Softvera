/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme.radno_vreme;

import communication.Communication;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Bibliotekar;
import model.RadnoVreme;

/**
 *
 * @author kacan
 */
public class FrmRadnoVreme extends javax.swing.JFrame {

    private Bibliotekar bibliotekar;
    private Communication communication;

    /**
     * Creates new form FrmRadnoVreme
     */
    public FrmRadnoVreme(Bibliotekar bibliotekar) {
        this.bibliotekar = bibliotekar;
        this.communication = Communication.getInstance();
        initComponents();
        setTitle("Radno vreme");
        popuniTabeluRadnoVreme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRadnoVreme = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnZatvori = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRadnoVreme.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Smena", "Datum"
            }
        ));
        jScrollPane1.setViewportView(tblRadnoVreme);

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        jButton1.setText("Obriši");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnZatvori)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(jButton1)
                    .addComponent(btnZatvori))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        FrmDodajRadnoVreme frm = new FrmDodajRadnoVreme(this, bibliotekar);
        frm.setVisible(true);
        frm.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TableModelRadnoVreme model = (TableModelRadnoVreme) tblRadnoVreme.getModel();
        int red = tblRadnoVreme.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati jedan red", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        RadnoVreme radnoVreme = model.getRadnaVremena().get(red);
        int choice = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da želite da obrišete radno vreme?", "Brisanje", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            int result = communication.obrisiRadnoVreme(radnoVreme);
            if (result == 0) {
                JOptionPane.showMessageDialog(this, "Došlo je do greške prilikom brisanja radnog vremena", "Greška", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Radno vreme uspešno obrisano", "Uspešno", JOptionPane.INFORMATION_MESSAGE);
            }
            popuniTabeluRadnoVreme();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRadnoVreme;
    // End of variables declaration//GEN-END:variables

    public void popuniTabeluRadnoVreme() {
        List<RadnoVreme> radnaVremena = communication.vratiSvaRadnaVremena();
        List<RadnoVreme> radnaVremenaZaposleni = new ArrayList<>();

        System.out.println(radnaVremena);
        if (radnaVremena != null) {
            for (RadnoVreme rv : radnaVremena) {
                if (rv.getBibliotekar().equals(bibliotekar)) {
                    radnaVremenaZaposleni.add(rv);
                }
            }
        }

        System.out.println("RVZ:" + radnaVremenaZaposleni);
        TableModelRadnoVreme model = new TableModelRadnoVreme(radnaVremenaZaposleni);
        tblRadnoVreme.setModel(model);
    }
}
